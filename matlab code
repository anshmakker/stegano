clc
clear all
close all
warning off
% Load the carrier and secret images
a = imread('messi67.jpeg');
subplot(2,2,1);
imshow(a);
title('Carrier Image');
x = imread('Secret.jpg');
subplot(2,2,2);
imshow(x);
title('Secret Image');
% Get the dimensions of the carrier image
[r, c, g] = size(a);
[l,m,n]=size(x);
% Resize the secret image to match the dimensions of the carrier image
x = imresize(x, [r, c]);
% Extract the color channels of the images
ra = a(:,:,1);
ga = a(:,:,2);
ba = a(:,:,3);
rx = x(:,:,1);
gx = x(:,:,2);
bx = x(:,:,3);
% Initialize variables to store the stego image
redsteg = zeros(r, c);
greensteg = zeros(r, c);
bluesteg = zeros(r, c);
% Embed the secret image into the carrier image
for i = 1:r
    for j = 1:c
        % Extract the least significant bit (LSB) of the carrier image
        nc(i, j) = bitand(ra(i, j), 252);
        % Extract the most significant bit (MSB) of the secret image
        ns(i, j) = bitand(rx(i, j), 128);
        ns2(i,j)=bitand(rx(i,j),64);
        % Scale the MSB to [0, 1]
        ds(i, j) = ns(i, j) / 128;
        ds2(i,j)=ns2(i,j)/64;
        % Combine the carrier's LSB and secret's MSB
        fr(i, j) = nc(i, j) + ds(i, j)*2 + ds2(i,j);
    end
end
% Assign the stego image to the corresponding color channels
redsteg = fr;
for i = 1:r
    for j = 1:c
        nc(i, j) = bitand(ga(i, j), 252);
        ns(i, j) = bitand(gx(i, j), 128);
        ns2(i,j)=bitand(gx(i,j),64);
        % Scale the MSB to [0, 1]
        ds(i, j) = ns(i, j) / 128;
        ds2(i,j)=ns2(i,j)/64;
        % Combine the carrier's LSB and secret's MSB
        fr(i, j) = nc(i, j) + ds(i, j)*2 + ds2(i,j);
    end
end
greensteg = fr;
for i = 1:r
    for j = 1:c
        nc(i, j) = bitand(ba(i, j), 252);
        ns(i, j) = bitand(bx(i, j), 128);
        ns2(i,j)=bitand(bx(i,j),64);
        % Scale the MSB to [0, 1]
        ds(i, j) = ns(i, j) / 128;
        ds2(i,j)=ns2(i,j)/64;
        % Combine the carrier's LSB and secret's MSB
        fr(i, j) = nc(i, j) + ds(i, j)*2 + ds2(i,j);
    end
end
bluesteg = fr;
% Combine the stego color channels into the final stego image
finalsteg = cat(3, redsteg, greensteg, bluesteg);
% Display the stego image
subplot(2,2,3);
imshow(finalsteg);
title('Stegmented Image');
% Initialize variables to store the recovered image
recoveredr = zeros(r, c);
recoveredg = zeros(r, c);
recoveredb = zeros(r, c);
% Extract the secret image from the stego image
for i = 1:r
    for j = 1:c
        % Extract the LSB from the red channel
        nc(i, j) = bitand(redsteg(i, j), 1);
        nc2(i,j)=bitand(redsteg(i,j),2);
        nc2(i,j)=nc2(i,j)/2;
        ms(i, j) = nc(i, j) * 64 + nc2(i,j)*128;
    end
end
recoveredr = ms;
for i = 1:r
    for j = 1:c
        % Extract the LSB from the green channel
        nc(i, j) = bitand(greensteg(i, j), 1);
        nc2(i,j)=bitand(greensteg(i,j),2);
        nc2(i,j)=nc2(i,j)/2;
        ms(i, j) = nc(i, j) * 64 + nc2(i,j)*128;
    end
end
recoveredg = ms;
for i = 1:r
    for j = 1:c
        % Extract the LSB from the blue channel
        nc(i, j) = bitand(bluesteg(i, j), 1);
        nc2(i,j)=bitand(bluesteg(i,j),2);
        nc2(i,j)=nc2(i,j)/2;
        ms(i, j) = nc(i, j) * 64 + nc2(i,j)*128;
    end
end
recoveredb = ms;
% Combine the recovered color channels into the final recovered image
output = cat(3, recoveredr, recoveredg, recoveredb);
output = imresize(output, [l, m]);
% Display the recovered image
subplot(2,2,4);
imshow(output);
title('Recovered Image');
